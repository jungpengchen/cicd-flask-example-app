name: CICD process 
on:
  push:
    branches:
      - dev
      - prod
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: set environment variables
        id: set_env
        env:
          CONDUIT_SECRET: ${{ secrets.SECRET_DESKTOP }}
          DOCKER_REGISTRY: docker.io/library/
        run: |
          SHORT_GITHUB_SHA=${GITHUB_SHA::7}
          SOURCE_IMAGE_TAG=flask-example-prod:$SHORT_GITHUB_SHA
          TARGET_IMAGE_TAG=flask-example-$GITHUB_REF_NAME:$SHORT_GITHUB_SHA
          echo "GITHUB_REF_NAME=$GITHUB_REF_NAME" >> $GITHUB_ENV
          echo "CONDUIT_SECRET=$CONDUIT_SECRET" >> $GITHUB_ENV
          echo "DOCKER_REGISTRY=$DOCKER_REGISTRY" >> $GITHUB_ENV
          echo "SOURCE_IMAGE_TAG=$SOURCE_IMAGE_TAG" >> $GITHUB_ENV
          echo "TARGET_IMAGE_TAG=$TARGET_IMAGE_TAG" >> $GITHUB_ENV
          echo $PWD
      - uses: docker/setup-buildx-action@v2
      - name: build target image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: false
          target: ${{ env.GITHUB_REF_NAME }} 
          tags: ${{ env.TARGET_IMAGE_TAG }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: print image
        run:
          docker images
      - name: test
        if: ${{ env.GITHUB_REF_NAME == 'dev' }}
        run:
          docker run --rm $TARGET_IMAGE_TAG flask test
      - name: push image
        run:
          echo "push image to harbor"
      - name: deploy app
        run:
          echo "deploy to dev/prod environment"
  init_monitor:
    needs: build_and_deploy
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run:
          echo "setup metrics and alert if monitor not set"

  